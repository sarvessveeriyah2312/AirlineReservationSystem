package airlineReservationSystem2021;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import modelClass.Reservation;
import modelClass.StatusEnum;

/**
 *
 * @author Chan Yuen Fu
 */
public class PaymentGatewayPay extends javax.swing.JFrame {

    private static Reservation reservation;

    public PaymentGatewayPay(Reservation reservation) {
        initComponents();

        this.reservation = reservation;

        txtAccNum.setText(reservation.getPayment().getBankAccount().getAccountNo());
        txtBankName.setText(reservation.getPayment().getBankAccount().getBankName());
        txtAmountToPay.setText("RM " + String.valueOf(reservation.getPayment().getAmount()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelAccNum = new javax.swing.JLabel();
        labelBankType = new javax.swing.JLabel();
        txtBankName = new javax.swing.JLabel();
        txtAccNum = new javax.swing.JLabel();
        btnPay = new javax.swing.JButton();
        labelPayGate = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        labelARS = new javax.swing.JLabel();
        btnBack = new javax.swing.JLabel();
        txtAmountToPay = new javax.swing.JLabel();
        labelBankType1 = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        labelAccNum.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        labelAccNum.setText("ACCOUNT NUMBER:");
        getContentPane().add(labelAccNum);
        labelAccNum.setBounds(90, 250, 200, 23);

        labelBankType.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        labelBankType.setText("BANK TYPE:");
        getContentPane().add(labelBankType);
        labelBankType.setBounds(90, 320, 120, 23);

        txtBankName.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        txtBankName.setText("Bank Name");
        getContentPane().add(txtBankName);
        txtBankName.setBounds(370, 320, 270, 30);

        txtAccNum.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        txtAccNum.setText("Acc Num");
        getContentPane().add(txtAccNum);
        txtAccNum.setBounds(370, 250, 270, 30);

        btnPay.setBackground(new java.awt.Color(0, 102, 255));
        btnPay.setFont(new java.awt.Font("Sitka Text", 0, 24)); // NOI18N
        btnPay.setForeground(new java.awt.Color(255, 255, 255));
        btnPay.setText("PAY");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });
        getContentPane().add(btnPay);
        btnPay.setBounds(90, 500, 270, 40);

        labelPayGate.setFont(new java.awt.Font("Sitka Text", 0, 24)); // NOI18N
        labelPayGate.setText("PAYMENT GATEWAY");
        getContentPane().add(labelPayGate);
        labelPayGate.setBounds(90, 170, 260, 31);

        jPanel2.setBackground(new java.awt.Color(0, 102, 255));
        jPanel2.setLayout(null);

        labelARS.setFont(new java.awt.Font("Sitka Heading", 1, 36)); // NOI18N
        labelARS.setForeground(new java.awt.Color(255, 255, 255));
        labelARS.setText("ARS");
        jPanel2.add(labelARS);
        labelARS.setBounds(100, 30, 80, 40);

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        btnBack.setText("jLabel1");
        btnBack.setMaximumSize(new java.awt.Dimension(60, 60));
        btnBack.setMinimumSize(new java.awt.Dimension(60, 60));
        btnBack.setPreferredSize(new java.awt.Dimension(60, 60));
        jPanel2.add(btnBack);
        btnBack.setBounds(20, 20, 60, 60);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 1060, 90);

        txtAmountToPay.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        txtAmountToPay.setText("0");
        getContentPane().add(txtAmountToPay);
        txtAmountToPay.setBounds(370, 420, 270, 20);

        labelBankType1.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        labelBankType1.setText("AMOUNT TO PAY:");
        getContentPane().add(labelBankType1);
        labelBankType1.setBounds(90, 420, 190, 20);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Hero.png"))); // NOI18N
        background.setText("a");
        getContentPane().add(background);
        background.setBounds(0, 90, 1060, 640);

        setSize(new java.awt.Dimension(1070, 768));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed

        try {
            int executedTicket, executedPayment, executedReservation;

            //Insert into Ticket
            String ticketQuery = "INSERT INTO tickets (seat_no,luggage_weight,insurance,flight_id) VALUES (?,?,?,?)";
            //Insert into Payment
            String paymentQuery = "INSERT INTO payments (amount,bank_account_id,status) VALUES (?,?,?)";

//          Prepared Statement for ticket and payment
            PreparedStatement psTicket = InitDb.getConnection().prepareStatement(ticketQuery, Statement.RETURN_GENERATED_KEYS);
            PreparedStatement psPayment = InitDb.getConnection().prepareStatement(paymentQuery, Statement.RETURN_GENERATED_KEYS);

            //Set value into Ticket
            psTicket.setString(1, reservation.getTicket().getSeatNo());
            psTicket.setDouble(2, reservation.getTicket().getLuggageWeight());
            psTicket.setBoolean(3, reservation.getTicket().getIsTakeInsurance());
            psTicket.setInt(4, reservation.getTicket().getFlight().getFlightId());

            //Set value into Payment
            psPayment.setDouble(1, reservation.getPayment().getAmount());
            psPayment.setInt(2, reservation.getPayment().getBankAccount().getId());
            psPayment.setString(3, StatusEnum.SUCCESSFUL.name());

//            Execute Query
            executedTicket = psTicket.executeUpdate();
            executedPayment = psPayment.executeUpdate();

            ResultSet ticketKey = psTicket.getGeneratedKeys();
            ResultSet paymentKey = psPayment.getGeneratedKeys();

//            Get ticket id after insert
            if (ticketKey.next()) {
                reservation.getTicket().setTicketId((int) ticketKey.getLong(1));
            }
//            Get Payment id after insert
            if (paymentKey.next()) {
                reservation.getPayment().setPaymentId((int) paymentKey.getLong(1));
            }

//            Set date to payment
            reservation.getPayment().setDate(Calendar.getInstance().getTime());
            reservation.getPayment().setStatus(StatusEnum.SUCCESSFUL);

            //Insert into Reservation
            String reservationQuery = "INSERT INTO reservations (user_id,ticket_id,payment_id) VALUES (?,?,?)";
            PreparedStatement psReservation = InitDb.getConnection().prepareStatement(reservationQuery);

            //Set value into Reservation
            psReservation.setString(1, reservation.getUser().getId());
            psReservation.setInt(2, reservation.getTicket().getTicketId());
            psReservation.setInt(3, reservation.getPayment().getPaymentId());

            executedReservation = psReservation.executeUpdate();
            if (executedTicket > 0 && executedPayment > 0 && executedReservation > 0) {
                new PaymentSuccess(reservation).setVisible(true);
                this.dispose();
            } else {
                System.out.println("Input Fail");
            }

            InitDb.close();

            psTicket.close();
            psPayment.close();
            psReservation.close();
        } catch (SQLException e) {
            System.err.println("Got an exception! ");
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_btnPayActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JLabel btnBack;
    private javax.swing.JButton btnPay;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelARS;
    private javax.swing.JLabel labelAccNum;
    private javax.swing.JLabel labelBankType;
    private javax.swing.JLabel labelBankType1;
    private javax.swing.JLabel labelPayGate;
    private javax.swing.JLabel txtAccNum;
    private javax.swing.JLabel txtAmountToPay;
    private javax.swing.JLabel txtBankName;
    // End of variables declaration//GEN-END:variables
}
